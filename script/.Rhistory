knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(brms)
data = read.csv('../data/raw-data.csv')
data = read.csv('./data/raw-data.csv')
data = read.csv('/Users/zhangyuhan/Documents/22-xinrui/data/raw-data.csv')
View(data)
data = read.csv('/Users/zhangyuhan/Documents/22-xinrui/data/raw-data.csv')
data = read.csv('/Users/zhangyuhan/Documents/22-xinrui/data/raw-data.csv')
data = read.csv('/Users/zhangyuhan/Documents/PhD/Research/22-xinrui/data/raw-data.csv')
View(data)
colnames(data)
data = read.csv('/Users/zhangyuhan/Documents/PhD/Research/22-xinrui/data/raw-data.csv')
data = data[-2,]
colnames(data)
data_slim = data %>%
select("Status", "Finished", "ResponseId", "practice.trial.1":"询问")
View(data_slim)
?gsub
as.data.frame(apply(myData,2,function(x)gsub('\\s+', '',x)))
?apply
# clean every space and punctuation in the character column
data_slim = data_slim %>%
mutate(across(everything(), as.character))
data_slim = as.data.frame(apply(data_slim,2,function(x)gsub('[[:punct:] ]+','',x)))
data_slim = as.data.frame(apply(data_slim,2,function(x)gsub('\\s+', '',x)))
1 == 1 or 2
1 == 1 | 2
# use the filler item to detect attention
data_trim = data_slim %>%
mutate(number_failed = case_when(
filler.1 != "幸福" ~ 1,
TRUE ~ 0)) %>%
mutate(number_failed = (number_failed + if_else(filler.2 != "排队", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.3 != "认同", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.4 != "时间", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.5 != "所有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.6 != "这", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.7 != "有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.8 != "香味", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.9 != "大约", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.10 != "天气", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.11 != "三", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.12 != "着", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.13 != "写生", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.14 != "光", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.15 != "许多", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.16 != "梅花", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.17 != "水果", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.18 != "也", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.19 != "七", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.20 != "北", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.21 != "少年", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.22 != "红", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.23 != "是"|"似", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.24 != "儿童", true = +1, false = 0, missing = +0)))
# use the filler item to detect attention
data_trim = data_slim %>%
mutate(number_failed = case_when(
filler.1 != "幸福" ~ 1,
TRUE ~ 0)) %>%
mutate(number_failed = (number_failed + if_else(filler.2 != "排队", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.3 != "认同", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.4 != "时间", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.5 != "所有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.6 != "这", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.7 != "有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.8 != "香味", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.9 != "大约", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.10 != "天气", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.11 != "三", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.12 != "着", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.13 != "写生", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.14 != "光", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.15 != "许多", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.16 != "梅花", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.17 != "水果", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.18 != "也", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.19 != "七", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.20 != "北", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.21 != "少年", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.22 != "红", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.23 != "是", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.24 != "儿童", true = +1, false = 0, missing = +0)))
# use the filler item to detect attention
data_trim = data_slim %>%
mutate(number_failed = case_when(
filler.1 != "幸福" ~ 1,
TRUE ~ 0)) %>%
mutate(number_failed = (number_failed + if_else(filler.2 != "排队", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.3 != "认同", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.4 != "时间", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.5 != "所有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.6 != "这", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.7 != "有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.8 != "香味", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.9 != "大约", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.10 != "天气", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.11 != "三", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.12 != "着", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.13 != "写生", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.14 != "光", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.15 != "许多", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.16 != "梅花", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.17 != "水果", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.18 != "也", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.19 != "七", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.20 != "北", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.21 != "少年", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.22 != "红", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.23 != "是", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.24 != "儿童", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(practice.trial.1 != "花园", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(practice.trial.2 != "有", true = +1, false = 0, missing = +0)))
View(data_trim)
# use external criteria to delete
data_trimed = data_trim %>%
filter(Status == "IPAddress",
Finished == "True",
number_failed >= 4)
View(data_trimed)
# use external criteria to delete
data_trimed = data_trim %>%
filter(Status == "IPAddress",
Finished == "True",
number_failed <= 4)
View(data_trimed)
# use external criteria to delete
data_trimed = data_trim %>%
filter(Status == "IPAddress",
Finished == "True",
number_failed <= 3)
# use external criteria to delete
data_trimed = data_trim %>%
filter(Status == "IPAddress",
Finished == "True",
number_failed <= 2)
table(data_trimed$学习阶段)
?table
table(data_trimed[, c("学习阶段", "性别")])
table(data_trimed[, c("学习阶段", "性别")])
?count
?length
length(data_trimed$年级)
table(data_trimed[, c("学习阶段")])
table(data_trimed[, c("学习阶段", "性别")])
length(data_trim)
elementary = data[which(data$学习阶段=="小学阶段"),]
high_school = data[sample(which(data$学习阶段=="高中阶段"), length(elementary$ResponseId)),]
View(elementary)
View(elementary)
elementary = data_trimed[which(data_trimed$学习阶段=="小学阶段"),]
high_school = data_trimed[sample(which(data_trimed$学习阶段=="高中阶段"), length(elementary$ResponseId)),]
data_wide = rbind(elementary, high_school)
View(data_wide)
View(data_wide)
table(data_wide[, c("学习阶段", "性别")])
colnames(data_wide)
?pivot_long
??pivot_long
library(tidyr)
?pivot_long
library(tidyr)
data_long = data_wide %>%
pivot_long("practice.trial.1":"filler.24", names_to="trialType",values_to="textInput")
data_long = data_wide %>%
pivot_longer("practice.trial.1":"filler.24", names_to="trialType",values_to="textInput")
View(data_long)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(brms)
library(tidyr)
data = read.csv('/Users/zhangyuhan/Documents/PhD/Research/22-xinrui/data/raw-data.csv')
data = data[-2,]
colnames(data)[27] = "student.female"
data_slim = data %>%
select("Status", "Finished", "ResponseId", "practice.trial.1":"询问")
# clean every space and punctuation in the character column
data_slim = data_slim %>%
mutate(across(everything(), as.character))
data_slim = as.data.frame(apply(data_slim,2,function(x)gsub('[[:punct:] ]+','',x)))
data_slim = as.data.frame(apply(data_slim,2,function(x)gsub('\\s+', '',x)))
# use the filler item to detect attention
data_trim = data_slim %>%
mutate(number_failed = case_when(
filler.1 != "幸福" ~ 1,
TRUE ~ 0)) %>%
mutate(number_failed = (number_failed + if_else(filler.2 != "排队", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.3 != "认同", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.4 != "时间", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.5 != "所有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.6 != "这", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.7 != "有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.8 != "香味", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.9 != "大约", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.10 != "天气", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.11 != "三", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.12 != "着", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.13 != "写生", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.14 != "光", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.15 != "许多", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.16 != "梅花", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.17 != "水果", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.18 != "也", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.19 != "七", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.20 != "北", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.21 != "少年", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.22 != "红", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.23 != "是", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.24 != "儿童", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(practice.trial.1 != "花园", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(practice.trial.2 != "有", true = +1, false = 0, missing = +0)))
# use external criteria to delete
data_trimed = data_trim %>%
filter(Status == "IPAddress",
Finished == "True",
number_failed <= 2)
table(data_trimed[, c("学习阶段")])
table(data_trimed[, c("学习阶段", "性别")])
elementary = data_trimed[which(data_trimed$学习阶段=="小学阶段"),]
high_school = data_trimed[sample(which(data_trimed$学习阶段=="高中阶段"), length(elementary$ResponseId)),]
data_wide = rbind(elementary, high_school)
table(data_wide[, c("学习阶段", "性别")])
data_long = data_wide %>%
pivot_longer("practice.trial.1":"filler.24", names_to="trialType",values_to="textInput")
View(data_long)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(brms)
library(tidyr)
#data = read.csv('/Users/zhangyuhan/Documents/PhD/Research/22-xinrui/data/raw-data.csv')
data = read.csv('../data/raw-data.csv')
#data = read.csv('/Users/zhangyuhan/Documents/PhD/Research/22-xinrui/data/raw-data.csv')
data = read.csv('../data/raw-data.csv')
data = data[-2,]
colnames(data)[27] = "student.female"
data_slim = data %>%
select("Status", "Finished", "ResponseId", "practice.trial.1":"询问")
# clean every space and punctuation in the character column
data_slim = data_slim %>%
mutate(across(everything(), as.character))
data_slim = as.data.frame(apply(data_slim,2,function(x)gsub('[[:punct:] ]+','',x)))
data_slim = as.data.frame(apply(data_slim,2,function(x)gsub('\\s+', '',x)))
# use the filler item to detect attention
data_trim = data_slim %>%
mutate(number_failed = case_when(
filler.1 != "幸福" ~ 1,
TRUE ~ 0)) %>%
mutate(number_failed = (number_failed + if_else(filler.2 != "排队", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.3 != "认同", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.4 != "时间", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.5 != "所有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.6 != "这", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.7 != "有", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.8 != "香味", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.9 != "大约", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.10 != "天气", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.11 != "三", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.12 != "着", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.13 != "写生", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.14 != "光", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.15 != "许多", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.16 != "梅花", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.17 != "水果", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.18 != "也", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.19 != "七", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.20 != "北", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.21 != "少年", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.22 != "红", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.23 != "是", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(filler.24 != "儿童", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(practice.trial.1 != "花园", true = +1, false = 0, missing = +0))) %>%
mutate(number_failed = (number_failed + if_else(practice.trial.2 != "有", true = +1, false = 0, missing = +0)))
# use external criteria to delete
data_trimed = data_trim %>%
filter(Status == "IPAddress",
Finished == "True",
number_failed <= 2)
table(data_trimed[, c("学习阶段")])
table(data_trimed[, c("学习阶段", "性别")])
elementary = data_trimed[which(data_trimed$学习阶段=="小学阶段"),]
high_school = data_trimed[sample(which(data_trimed$学习阶段=="高中阶段"), length(elementary$ResponseId)),]
data_wide = rbind(elementary, high_school)
table(data_wide[, c("学习阶段", "性别")])
data_long = data_wide %>%
pivot_longer("practice.trial.1":"filler.24", names_to="trialType",values_to="textInput")
# save a clean csv form
# save a clean csv form
write.csv(data_long, "../data/data_ready_for_analysis.csv")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(brms)
library(tidyr)
data = read.csv('./data/data_ready_for_analysis.csv')
data = read.csv('../data/data_ready_for_analysis.csv')
colnames(data)
View(data)
data$trialType = gsub('.\d+1$', '', data$trialType)
data$trialType = gsub('.\\d+1$', '', data$trialType)
View(data)
data$trialType = gsub('.\\d+$', '', data$trialType)
?separate
data_critical = data %>%
filter(trialType != "filler"|"practice.trial") %>%
separate(trialType, into=c("career", "condition"), sep=".")
data_critical = data %>%
filter(trialType != "filler") %>%
filter(trialType != "practice.trial") %>%
separate(trialType, into=c("career", "condition"), sep=".")
View(data_critical)
data = read.csv('../data/data_ready_for_analysis.csv')
data$trialType = gsub('.\\d+$', '', data$trialType)
data_critical = data %>%
filter(trialType != "filler") %>%
filter(trialType != "practice.trial") %>%
separate(trialType, into=c("career", "condition"), sep=".")
View(data_critical)
data_critical = data %>%
filter(trialType != "filler") %>%
filter(trialType != "practice.trial")
View(data_critical)
data_critical = data_critical %>%
separate(trialType, into=c("career", "condition"), sep="\.", remove=TRUE)
data_critical_1 = data_critical %>%
separate(trialType, into=c("career", "condition"), sep=".", remove=TRUE)
data_critical = data_critical %>%
separate(trialType, into=c("career", "condition"), sep="\\.", remove=TRUE)
View(data_critical)
data = read.csv('../data/data_ready_for_analysis.csv')
data$trialType = gsub('.\\d+$', '', data$trialType)
data_critical = data %>%
filter(trialType != "filler") %>%
filter(trialType != "practice.trial") %>%
separate(trialType, into=c("career", "condition"), sep="\\.", remove=TRUE) %>%
filter(textInput != "NA")
View(data_critical)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(brms)
library(tidyr)
data = read.csv('../data/data_ready_for_analysis.csv')
data$trialType = gsub('.\\d+$', '', data$trialType)
data_critical = data %>%
filter(trialType != "filler") %>%
filter(trialType != "practice.trial") %>%
separate(trialType, into=c("career", "condition"), sep="\\.", remove=TRUE) %>%
filter(!is.na(textInput))
View(data_critical)
View(data_critical)
data_critical = data %>%
filter(trialType != "filler") %>%
filter(trialType != "practice.trial") %>%
separate(trialType, into=c("career", "condition"), sep="\\.", remove=TRUE) %>%
filter(!is.na(textInput))
data_critical$textInput[0]
data_critical$textInput[1]
data_critical$textInput[2]
data_critical$textInput[3]
data_critical$textInput[4]
data = read.csv('../data/data_ready_for_analysis.csv')
data$trialType = gsub('.\\d+$', '', data$trialType)
data_critical = data %>%
filter(trialType != "filler") %>%
filter(trialType != "practice.trial") %>%
separate(trialType, into=c("career", "condition"), sep="\\.", remove=TRUE) %>%
filter(length(textInput) != 0)
table(data_critical$textInput)
table(data_critical$textInput)
data_critical = data_critical %>%
filter(textInput in answers)
data_critical = data_critical %>%
filter(textInput %in% answers)
answers = c("他","他他它","他她","她","她他","她它他","它","说她")
data_critical = data_critical %>%
filter(textInput %in% answers)
View(data_critical)
table(data_critical[,c("career", "condition")])
table(data_critical[,c("career", "condition")])
encoding_table = data.frame(textInput, encoding)
encoding = c("masculine", "invalid", "both", "feminine", "both","three","nonhuman","invalid")
textInput = c("他","他他它","他她","她","她他","她它他","它","说她")
encoding_table = data.frame(textInput, encoding)
data_critical = left_join(data_critical, encoding_table, by = 'textInput')
View(data_critical)
table(data_critical[, c("textInput","学习阶段","condition")])
table(data_critical[, c("encoding","学习阶段","condition")])
View(encoding_table)
data_critical = data_critical %>%
mutate(feminine = if_else(encoding %in% c("both", "three", "feminine")))
data_critical = data_critical %>%
mutate(feminine = if_else(encoding %in% c("both", "three", "feminine"), 1, 0))
feminine_by_career = data_critical %>%
group_by(career, "学习阶段") %>%
summarise(count = length(textInput),
feminine = sum(feminine)/count,
non_feminine = 1 - feminine)
View(feminine_by_career)
View(data_critical)
feminine_by_career = data_critical %>%
filter(condition == "neutral") %>%
group_by(career, 学习阶段) %>%
summarise(count = length(textInput),
feminine = sum(feminine)/count,
non_feminine = 1 - feminine)
ggplot(data=feminine_by_career, aes(x=学习阶段, y=feminine)) +
geom_bar(stats="identity", width=5) +
facet_wrap(vars(~career))
ggplot(data=feminine_by_career, aes(x=学习阶段, y=feminine)) +
geom_bar(stats="identity", width=5) +
facet_wrap(vars(career))
ggplot(data=feminine_by_career, aes(x=学习阶段, y=feminine)) +
geom_bar(stat="identity", width=5) +
facet_wrap(vars(career))
ggplot(data=feminine_by_career, aes(x=学习阶段, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
facet_wrap(vars(career))
feminine_by_career = feminine_by_career %>%
mutate(Education = if_else(学习阶段=="小学阶段", "Elementary", "High School"))
View(feminine_by_career)
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
facet_wrap(vars(career))
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
theme_bw()
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
geom_hline(yintercept = 0.5, linetype="dashed", color="red") +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
theme_bw() +
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
geom_hline(yintercept = 0.5, linetype="dashed", color="red") +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
theme_bw()
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
geom_hline(yintercept = 0.5, linetype="dashed", color="red") +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
theme_bw()
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
geom_hline(yintercept = 0.5, linetype="dashed", color="red") +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
theme_bw() +
theme(axis.text=element_text(size=18))
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
geom_hline(yintercept = 0.5, linetype="dashed", color="red") +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=15),
plot.title=element_text(size=18))
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
geom_hline(yintercept = 0.5, linetype="dashed", color="red") +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=15),
plot.title=element_text(size=18),
strip.text=element_text(size=15))
ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
geom_hline(yintercept = 0.5, linetype="dashed", color="red") +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
labs(y="Proportion of feminine pronoun") +
theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=15),
plot.title=element_text(size=18),
strip.text=element_text(size=15))
?ggsave
ggsave('../graph/feminine_career_education.png', f1, device = 'png', width=18, height=15, units="cm", dpi=200)
f1 = ggplot(data=feminine_by_career, aes(x=Education, y=feminine)) +
geom_bar(stat="identity", width=0.5) +
geom_hline(yintercept = 0.5, linetype="dashed", color="red") +
facet_wrap(vars(career)) +
ggtitle("Proportion of feminine pronoun in the neutral condition") +
labs(y="Proportion of feminine pronoun") +
theme_bw() +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=15),
plot.title=element_text(size=18),
strip.text=element_text(size=15))
ggsave('../graph/feminine_career_education.png', f1, device = 'png', width=18, height=15, units="cm", dpi=200)
ggsave('../graph/feminine_career_education.png', f1, device = 'png', width=20, height=15, units="cm", dpi=200)
ggsave('../graph/feminine_career_education.png', f1, device = 'png', width=24, height=15, units="cm", dpi=200)
